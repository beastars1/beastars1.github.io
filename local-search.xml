<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Docker 解锁网易云音乐</title>
    <link href="/2022/04/26/Docker%20%E8%A7%A3%E9%94%81%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90/"/>
    <url>/2022/04/26/Docker%20%E8%A7%A3%E9%94%81%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90/</url>
    
    <content type="html"><![CDATA[<h3 id="Docker-解锁网易云音乐"><a href="#Docker-解锁网易云音乐" class="headerlink" title="Docker 解锁网易云音乐"></a>Docker 解锁网易云音乐</h3><p>docker 解锁网易云客户端灰色 music</p><p>[解锁网易云客户端灰色 music](<a href="https://github.com/UnblockNeteaseMusic/server">UnblockNeteaseMusic&#x2F;server: Revive unavailable songs for Netease Cloud Music (Refactored &amp; Enhanced version) (github.com)</a>)</p><h4 id="1-服务器启动镜像"><a href="#1-服务器启动镜像" class="headerlink" title="1. 服务器启动镜像"></a>1. 服务器启动镜像</h4><p>docker 拉取镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">docker pull pan93412/unblock-netease-music-enhanced<br></code></pre></td></tr></table></figure><p>docker 运行容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run --name unblock-netease-music-enhanced -d -p 8888:8080 pan93412/unblock-netease-music-enhanced -s -e https://music.163.com --restart=always <br></code></pre></td></tr></table></figure><ul><li>-s 开启严格模式，若将服务部署到公网，强烈建议使用严格模式 (此模式下仅放行网易云音乐所属域名的请求)</li></ul><p>如果需要开启使用无损音质，开启黑胶 vip，可以通过 -e 传入环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run --name unblock-netease-music-enhanced -d -p 8888:8080 -e ENABLE_LOCAL_VIP=<span class="hljs-literal">true</span> -e ENABLE_FLAC=<span class="hljs-literal">true</span> pan93412/unblock-netease-music-enhanced -s -e https://music.163.com --restart=always <br></code></pre></td></tr></table></figure><ul><li>ENABLE_LOCAL_VIP&#x3D;true 激活本地黑胶 VIP</li><li>ENABLE_FLAC&#x3D;true 激活无损音质获取</li></ul><blockquote><p>获取无损音质会导致服务器的内存占用变高</p></blockquote><p>可以启动时添加 NO_CACHE 参数，停用服务器缓存</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">-e <span class="hljs-attribute">NO_CACHE</span>=<span class="hljs-literal">true</span> <br></code></pre></td></tr></table></figure><h4 id="2-本地机器配置"><a href="#2-本地机器配置" class="headerlink" title="2. 本地机器配置"></a>2. 本地机器配置</h4><p>Windows 下在网易云客户端的设置→工具→http代理中，选择自定义代理，将服务器 ip 和端口填入，确定后重启客户端，即可使用。</p><h4 id="3-更新"><a href="#3-更新" class="headerlink" title="3. 更新"></a>3. 更新</h4><p>若要更新 UnblockNeteaseMusic，运行以下命令后重新 run：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull pan93412/unblock-netease-music-enhanced<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker 常用命令</title>
    <link href="/2022/04/21/Docker%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2022/04/21/Docker%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h2 id="docker-常用命令"><a href="#docker-常用命令" class="headerlink" title="docker 常用命令"></a>docker 常用命令</h2><h3 id="1-docker-配置镜像源"><a href="#1-docker-配置镜像源" class="headerlink" title="1. docker 配置镜像源"></a>1. docker 配置镜像源</h3><p>配置 ustc 镜像源</p><p>在 <code>/etc/docker/daemon.json</code> 中添加</p><figure class="highlight json"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;registry-mirrors&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;https://docker.mirrors.ustc.edu.cn/&quot;</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>之后 <code>systemctl restart docker</code> 重启 docker</p><h3 id="2-docker-搜索镜像"><a href="#2-docker-搜索镜像" class="headerlink" title="2. docker 搜索镜像"></a>2. docker 搜索镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker search redis<br></code></pre></td></tr></table></figure><h3 id="3-docker-拉取镜像"><a href="#3-docker-拉取镜像" class="headerlink" title="3. docker 拉取镜像"></a>3. docker 拉取镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull redis <span class="hljs-comment"># 默认拉取最新版本</span><br>docker pull redis:latest<br>docker pull redis:version<br></code></pre></td></tr></table></figure><h3 id="4-docker-显示已经安装的镜像"><a href="#4-docker-显示已经安装的镜像" class="headerlink" title="4. docker 显示已经安装的镜像"></a>4. docker 显示已经安装的镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker images<br></code></pre></td></tr></table></figure><h3 id="5-docker-删除已经安装的镜像"><a href="#5-docker-删除已经安装的镜像" class="headerlink" title="5. docker 删除已经安装的镜像"></a>5. docker 删除已经安装的镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker rmi imageId<br></code></pre></td></tr></table></figure><h3 id="6-docker-运行容器"><a href="#6-docker-运行容器" class="headerlink" title="6. docker 运行容器"></a>6. docker 运行容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run [OPTIONS] IMAGE[:TAG|@DIGEST] [COMMAND] [ARG...]<br></code></pre></td></tr></table></figure><p>docker run的额外参数</p><ul><li><p>–name 给当前运行的容器起一个名字</p><p><code>docker run --name mytomcat -d tomcat</code></p></li><li><p>-d 后台运行容器</p></li><li><p>-p 用于端口映射</p><blockquote><p>-p src:dest</p><p>src 为物理主机端口，dest 为容器的端口</p><p>-p 8888:9999 就是将物理主机的 8888 端口映射到容器的 9999 端口，这样就可以通过访问物理主机的 8888 端口来访问容器的 9999 端口了</p></blockquote></li></ul><h3 id="7-docker-查看正在运行的容器"><a href="#7-docker-查看正在运行的容器" class="headerlink" title="7. docker 查看正在运行的容器"></a>7. docker 查看正在运行的容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker ps [ARG...]<br></code></pre></td></tr></table></figure><h3 id="8-docker-停止正在运行的容器"><a href="#8-docker-停止正在运行的容器" class="headerlink" title="8. docker 停止正在运行的容器"></a>8. docker 停止正在运行的容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker stop containerId <br></code></pre></td></tr></table></figure><h3 id="9-docker-启动容器"><a href="#9-docker-启动容器" class="headerlink" title="9. docker 启动容器"></a>9. docker 启动容器</h3><p>run 是从镜像创建一个新容器启动，start 是启动已经存在的容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker start containerId<br></code></pre></td></tr></table></figure><h3 id="10-docker-删除容器"><a href="#10-docker-删除容器" class="headerlink" title="10. docker 删除容器"></a>10. docker 删除容器</h3><p>只删除容器，不删除镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">rm</span> containerId<br></code></pre></td></tr></table></figure><h3 id="11-docker-查看容器启动的日志"><a href="#11-docker-查看容器启动的日志" class="headerlink" title="11. docker 查看容器启动的日志"></a>11. docker 查看容器启动的日志</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker logs containerId<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
